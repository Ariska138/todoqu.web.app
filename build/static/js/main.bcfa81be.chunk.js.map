{"version":3,"sources":["components/auth/SignIn.jsx","actions/AuthAction.js","components/auth/SignUp.jsx","components/tasks/AddTask.jsx","actions/taskActions.js","components/tasks/Check.jsx","components/tasks/Task.jsx","components/tasks/Tasks.jsx","components/dashboard/Dashboard.jsx","components/layout/NavItems.jsx","components/layout/NavBar.jsx","App.js","serviceWorker.js","Reducers/taskReducer.js","Reducers/authReducer.js","Reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","console","log","props","signIn","this","uid","to","className","autoComplete","onSubmit","htmlFor","type","onChange","Component","connect","firebase","auth","dispatch","creds","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","SignUp","signUp","createUserWithEmailAndPassword","AddTask","task","addTask","document","getElementById","reset","firestore","authorId","collection","add","date","Date","Check","checked","onClick","style","cursor","removeTask","doc","delete","toggleChecked","set","merge","scope","moment","toDate","calendar","handleCheck","handleRemove","compose","tasks","ordered","firestoreConnect","ownProps","where","orderBy","map","signOut","App","path","component","Dashboard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","taskReducer","action","toast","success","warn","info","authReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","width","height","role","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bcfa81be.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {signIn} from \"../../actions/AuthAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n      email: \"\",\r\n      password: \"\"\r\n  };\r\n\r\n  handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.id]: e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(this.state);\r\n      this.props.signIn(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { uid } = this.props;\r\n    if(uid) return <Redirect to=\"/\"/>\r\n    \r\n    return (\r\n      <div className=\"container my-5\">\r\n        <h1> Sign In</h1>\r\n        <form \r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input \r\n            type=\"email\" \r\n            className=\"form-control\" \r\n            id=\"email\"\r\n            onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input \r\n            type=\"password\"\r\n            className=\"form-control\" \r\n            id=\"password\"\r\n            onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Sign In\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  const uid = state.firebase.auth.uid;\r\n\r\n  return {\r\n      uid\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {signIn: (creds) => dispatch(signIn(creds))}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import { analytics, auth } from \"firebase\"\r\n\r\nexport const signIn = creds => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"SIGN_IN\"\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: \"SIGN_IN_ERR\"\r\n            },\r\n            err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n            dispatch({type: \"SIGN_OUT\"});\r\n        });\r\n    };\r\n};\r\n\r\nexport const signUp = creds => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n            dispatch({ type: \"SIGN_UP\" });\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: \"SIGN_UP_ERR\"}, err);\r\n        })\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { signUp } from \"../../actions/AuthAction\";\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    };\r\n  \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n  \r\n    render() {\r\n      const {uid} = this.props;\r\n      if(uid) return <Redirect to=\"/\"/>\r\n\r\n      return (\r\n        <div className=\"container my-5\">\r\n          <h1> Sign Up</h1>\r\n          <form \r\n          autoComplete=\"off\"\r\n          onSubmit={this.handleSubmit}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email address</label>\r\n              <input \r\n              type=\"email\" \r\n              className=\"form-control\" \r\n              id=\"email\"\r\n              onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input \r\n              type=\"password\"\r\n              className=\"form-control\" \r\n              id=\"password\"\r\n              onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  const uid = state.firebase.auth.uid;\r\n\r\n  return ({uid});\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: creds => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n  ","import React, { Component } from \"react\";\r\nimport {addTask} from \"../../actions/taskActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n      task: \"\"\r\n  };\r\n\r\n  handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.id]: e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.addTask(this.state)\r\n      document.getElementById(\"addTaskForm\").reset();\r\n      console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-5\">\r\n        <form \r\n        id=\"addTaskForm\"\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"task\">Add Task</label>\r\n            <input \r\n            type=\"text\"\r\n            className=\"form-control\" \r\n            id=\"task\"\r\n            onChange={this.handleChange}\r\n            />\r\n          </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTask: task => dispatch(addTask(task))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);","export const addTask = task => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore\r\n        .collection(\"tasks\")\r\n        .add({\r\n            ...task,\r\n            authorId,\r\n            date: new Date()\r\n        })\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"ADD_TASK\",\r\n                task\r\n            })\r\n        })\r\n        .catch(err =>{\r\n            dispatch({\r\n                type: \"ADD_TASK_ERR\",\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeTask = task => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n\r\n        firestore\r\n        .collection('tasks')\r\n        .doc(task.id)\r\n        .delete()\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"REMOVE_TASK\"\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: \"REMOVE_TASK_ERR\",\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const toggleChecked = task => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firestore = getFirebase().firestore();\r\n\r\n        firestore\r\n        .collection(\"tasks\")\r\n        .doc(task.id)\r\n        .set({\r\n            ...task,\r\n            checked: !task.checked\r\n        },\r\n        {merge: true}\r\n        )\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"TOGGLE_CHECKED\",\r\n                task\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type:\"TOGGLE_CHECKED_ERR\",\r\n                err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Check = ({ checked, onClick}) => {\r\n    if(checked === true) {\r\n        return (\r\n            <span \r\n            className=\"material-icons text-success\"\r\n            style={{cursor:\"pointer\"}}\r\n            onClick={onClick} // refference to onclick\r\n            >\r\n                check_circle_outline\r\n            </span>\r\n        )\r\n    } else {\r\n        return (\r\n            <span\r\n            className=\"material-icons text-muted\"\r\n            style={{cursor: \"pointer\"}}\r\n            onClick={onClick}\r\n            >check_circle_outline</span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Check;","import React from \"react\";\r\n// format date\r\nimport moment from \"moment\";\r\n// remove row\r\nimport { removeTask, toggleChecked } from \"../../actions/taskActions\";\r\n// update checklist\r\nimport Check from \"./Check\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst Task = ({ task, removeTask, toggleChecked }) => {\r\n  const handleRemove = (task) => {\r\n    removeTask(task);\r\n  };\r\n\r\n\r\n  const handleCheck = task => {\r\n      toggleChecked(task);\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{task.task}</th>\r\n      <td>{moment(task.date.toDate()).calendar()}</td>\r\n      <td>\r\n        <Check\r\n        onClick={()=> handleCheck(task)}\r\n        checked={task.checked}\r\n        />\r\n      </td>\r\n      <td>\r\n        <span\r\n          className=\"material-icons text-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleRemove(task)}\r\n        >\r\n          delete\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeTask: (task) => dispatch(removeTask(task)),\r\n    toggleChecked: (task) => dispatch(toggleChecked(task))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);\r\n","import React from 'react'; //imr <tab>\r\nimport Task from './Task';\r\n//read data form firebase\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nconst Tasks = ({tasks}) => { // slr <tab>\r\n    return (\r\n        <table className=\"table table-striped table-dark\">\r\n  <thead>\r\n    <tr className=\"text-info\">\r\n      <th scope=\"col\">Tasks</th>\r\n      <th scope=\"col\">Added On</th>\r\n      <th scope=\"col\">Status</th>\r\n      <th scope=\"col\">Delete</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {tasks && tasks.map(task => <Task task={task} key={task.id}/>)}\r\n    \r\n  </tbody>\r\n</table>\r\n    );\r\n}\r\n\r\n//read data\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  const tasks = state.firestore.ordered.tasks;\r\n  return {\r\n    tasks,\r\n    uid: state.firebase.auth.uid\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n   firestoreConnect(ownProps => [{\r\n  collection: \"tasks\",\r\n  where: [\"authorId\", \"==\", ownProps.uid],\r\n  orderBy: [\"date\",\"desc\"]\r\n}]))(Tasks);","import React from \"react\";\r\nimport AddTask from \"../tasks/AddTask\";\r\nimport Tasks from \"../tasks/Tasks\";\r\nimport{connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dashboard = ({uid}) => {\r\n  if(!uid) return <Redirect to=\"/signin\"/>\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Dashboard</h3>\r\n      <AddTask />\r\n      <Tasks/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateProps = (state) => {\r\n  const uid = state.firebase.auth.uid;\r\n\r\n  return {uid};\r\n}\r\n\r\nexport default connect(mapStateProps)(Dashboard);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {signOut} from \"../../actions/AuthAction\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst NavItems = ({signOut, uid}) => {\r\n    if(uid){\r\n        return (\r\n        <Link \r\n            to=\"/signin\" \r\n            className=\"nav-link\"\r\n            onClick={signOut}\r\n            >\r\n                Sign Out\r\n            </Link>\r\n            )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n           \r\n            <Link to=\"/signup\" className=\"nav-link\">\r\n                Sign Up\r\n            </Link>\r\n            <Link to=\"/signin\" className=\"nav-link\">\r\n                Sign In\r\n            </Link>\r\n          </>  \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const uid = state.firebase.auth.uid;\r\n\r\n    return {uid}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavItems);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport NavItems from './NavItems';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar-light bg-light d-flex justify-content-center\">\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n                <h3>TodoQu</h3>\r\n            </Link>\r\n            <NavItems/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n}\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport SignIn from \"./components/auth/SignIn\"\r\nimport SignUp from './components/auth/SignUp';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport NavBar from './components/layout/NavBar';\r\n//notification pop up\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <ToastContainer/>\r\n    <NavBar/>\r\n    <Switch>\r\n    <Route path=\"/signin\" component={SignIn}/>\r\n    <Route path=\"/signup\" component={SignUp}/>\r\n    <Route path=\"/\" component={Dashboard}/>\r\n    \r\n    </Switch>\r\n    </BrowserRouter>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {toast} from \"react-toastify\";\r\n\r\nconst taskReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TASK\": {\r\n            toast.success(\"Added a task\");\r\n            return state;\r\n        }\r\n\r\n        case \"ADD_TASK_ERR\":{\r\n            toast.error(\"An Error occured\");\r\n            return state;\r\n        }\r\n\r\n        case \"REMOVE_TASK\": {\r\n            toast.warn(\"A tas was removed...\");\r\n            return state;\r\n        }\r\n\r\n        case \"REMOVE_TASK_ERR\": {\r\n            toast.error(\"A task remove error occured...\");\r\n            return state;\r\n        }\r\n\r\n        case \"TOGGLE_CHECKED\": {\r\n            toast.info(\"A task status changed...\");\r\n            return state;\r\n        }\r\n\r\n        case \"TOGGLE_CHECKED_ERR\": {\r\n            toast.error(\"A task status change error occured...\");\r\n            return state;\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default taskReducer;","import { toast } from \"react-toastify\";\r\n\r\nconst authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\": { // bisa tidak pakai kurung kurawal\r\n      toast(\"Welcome back..\");\r\n      return state;\r\n    }\r\n    \r\n    case \"SIGN_IN_ERR\": {\r\n      toast.error(\"Sign in error...\");\r\n      return state;\r\n    }\r\n\r\n    case \"SIGN_OUT\": {\r\n        toast(\"You signed out..\");\r\n        return state;\r\n    }\r\n\r\n    case \"SIGN_UP\": { // bisa tidak pakai kurung kurawal\r\n        toast(\"Welcome..\");\r\n        return state;\r\n      }\r\n\r\n      case \"SIGN_UP_ERR\": {\r\n        toast.error(\"Sign up error...\");\r\n        return state;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport { combineReducers } from 'redux';\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport {firestoreReducer} from \"redux-firestore\";\r\nimport taskReducer from \"./taskReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    task: taskReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport default rootReducer;"," import firebase from \"firebase/app\";\r\n import \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n \r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyCrbDjDaa1T7KiXggar16mHLid96Haw4zo\",\r\n    authDomain: \"todoqu.firebaseapp.com\",\r\n    databaseURL: \"https://todoqu.firebaseio.com\",\r\n    projectId: \"todoqu\",\r\n    storageBucket: \"todoqu.appspot.com\",\r\n    messagingSenderId: \"135932337458\",\r\n    appId: \"1:135932337458:web:e5938be044bb4e6c444b2b\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n//redux\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n//firebase\r\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\nimport firebase from \"./config/firebaseConfig\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\n//loading\r\nimport { useSelector } from \"react-redux\";\r\nimport { isLoaded } from \"react-redux-firebase\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk.withExtraArgument({ getFirebase }))\r\n);\r\n\r\n//react-redux-firebase props\r\nconst rrfProps = {\r\n  firebase,\r\n  config: {},\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  if (!isLoaded(auth))\r\n    return (\r\n      <div className=\"text-center\">\r\n        <div\r\n          className=\"spinner-grow text-primary\"\r\n          style={{ width: \"7rem\", height: \"7rem\" }}\r\n          role=\"status\"\r\n        >\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return children;\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <AuthIsLoaded>\r\n          <App />\r\n        </AuthIsLoaded>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}